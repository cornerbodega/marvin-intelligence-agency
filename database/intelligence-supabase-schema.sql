
SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

CREATE EXTENSION IF NOT EXISTS "pgsodium" WITH SCHEMA "pgsodium";

CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";

CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgjwt" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";

CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";

CREATE OR REPLACE FUNCTION "public"."get_parent_reports"("p_childreportid" integer) RETURNS TABLE("parentReportId" integer)
    LANGUAGE "plpgsql"
    AS $$
DECLARE
  current_id INT := 76;
BEGIN
  WHILE current_id IS NOT NULL LOOP
    RAISE NOTICE 'Current id is %', current_id;
    RETURN QUERY SELECT "parentReportId" FROM links WHERE "childReportId" = current_id;
    SELECT "parentReportId" INTO current_id FROM links WHERE "childReportId" = current_id;
  END LOOP;

  RETURN;
END; $$;

ALTER FUNCTION "public"."get_parent_reports"("p_childreportid" integer) OWNER TO "postgres";

CREATE OR REPLACE FUNCTION "public"."get_parent_reports"("p_childreportid" bigint) RETURNS TABLE("parentReportId" bigint)
    LANGUAGE "plpgsql"
    AS $$
DECLARE
  current_id BIGINT := 76;
BEGIN
  WHILE current_id IS NOT NULL LOOP
    RAISE NOTICE 'Current id is %', current_id;
    RETURN QUERY SELECT "parentReportId" FROM links WHERE "childReportId" = current_id;
    SELECT "parentReportId" INTO current_id FROM links WHERE "childReportId" = current_id;
  END LOOP;

  RETURN;
END; $$;

ALTER FUNCTION "public"."get_parent_reports"("p_childreportid" bigint) OWNER TO "postgres";

SET default_tablespace = '';

SET default_table_access_method = "heap";

CREATE TABLE IF NOT EXISTS "public"."agents" (
    "agentId" bigint NOT NULL,
    "createdAt" timestamp with time zone DEFAULT "now"(),
    "agentName" "text",
    "expertise1" "text",
    "expertise2" "text",
    "expertise3" "text",
    "memorySummary" "text",
    "bio" "text",
    "profilePicUrl" "text",
    "userId" "text",
    "expertiseSummary" "text",
    "specializedTraining" "text"
);

ALTER TABLE "public"."agents" OWNER TO "postgres";

ALTER TABLE "public"."agents" ALTER COLUMN "agentId" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."agents_agentId_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."folderLikes" (
    "id" bigint NOT NULL,
    "createdAt" timestamp with time zone DEFAULT "now"() NOT NULL,
    "folderId" bigint,
    "userId" "text",
    "likeValue" smallint
);

ALTER TABLE "public"."folderLikes" OWNER TO "postgres";

ALTER TABLE "public"."folderLikes" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."folderLikes_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."folders" (
    "folderId" bigint NOT NULL,
    "createdAt" timestamp with time zone DEFAULT "now"() NOT NULL,
    "folderName" "text",
    "folderPicUrl" "text",
    "userId" "text" NOT NULL,
    "folderDescription" "text",
    "folderPicDescription" "text",
    "folderPicUrls" "text",
    "availability" "text"
);

ALTER TABLE "public"."folders" OWNER TO "postgres";

ALTER TABLE "public"."folders" ALTER COLUMN "folderId" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."folders_folderId_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."links" (
    "linkId" bigint NOT NULL,
    "createdAt" timestamp with time zone DEFAULT "now"() NOT NULL,
    "parentReportId" bigint NOT NULL,
    "childReportId" bigint,
    "highlightedText" "text",
    "range" "text",
    "elementId" "text"
);

ALTER TABLE "public"."links" OWNER TO "postgres";

ALTER TABLE "public"."links" ALTER COLUMN "linkId" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."links_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."reportFolders" (
    "reportFolderId" bigint NOT NULL,
    "createdAt" timestamp with time zone DEFAULT "now"() NOT NULL,
    "reportId" bigint,
    "folderId" bigint
);

ALTER TABLE "public"."reportFolders" OWNER TO "postgres";

ALTER TABLE "public"."reportFolders" ALTER COLUMN "reportFolderId" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."reportFolders_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."reports" (
    "reportId" bigint NOT NULL,
    "createdAt" timestamp with time zone DEFAULT "now"() NOT NULL,
    "briefingInput" "text",
    "userId" "text",
    "reportContent" "text",
    "reportPicUrl" "text",
    "reportTitle" "text",
    "reportSummary" "text",
    "agentId" bigint,
    "reportPicDescription" "text",
    "availability" "text"
);

ALTER TABLE "public"."reports" OWNER TO "postgres";

ALTER TABLE "public"."reports" ALTER COLUMN "reportId" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."reports_reportId_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."users" (
    "createdAt" timestamp with time zone DEFAULT "now"(),
    "agencyName" "text",
    "email" "text",
    "userId" "text" NOT NULL
);

ALTER TABLE "public"."users" OWNER TO "postgres";

ALTER TABLE ONLY "public"."agents"
    ADD CONSTRAINT "agents_pkey" PRIMARY KEY ("agentId");

ALTER TABLE ONLY "public"."folderLikes"
    ADD CONSTRAINT "folderLikes_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."folders"
    ADD CONSTRAINT "folders_pkey" PRIMARY KEY ("folderId");

ALTER TABLE ONLY "public"."links"
    ADD CONSTRAINT "links_pkey" PRIMARY KEY ("linkId");

ALTER TABLE ONLY "public"."reportFolders"
    ADD CONSTRAINT "reportFolders_pkey" PRIMARY KEY ("reportFolderId");

ALTER TABLE ONLY "public"."reports"
    ADD CONSTRAINT "reports_pkey" PRIMARY KEY ("reportId");

ALTER TABLE ONLY "public"."users"
    ADD CONSTRAINT "users_pkey" PRIMARY KEY ("userId");

ALTER TABLE ONLY "public"."agents"
    ADD CONSTRAINT "agents_userId_fkey" FOREIGN KEY ("userId") REFERENCES "public"."users"("userId");

ALTER TABLE ONLY "public"."folderLikes"
    ADD CONSTRAINT "folderLikes_folderId_fkey" FOREIGN KEY ("folderId") REFERENCES "public"."folders"("folderId");

ALTER TABLE ONLY "public"."folderLikes"
    ADD CONSTRAINT "folderLikes_userId_fkey" FOREIGN KEY ("userId") REFERENCES "public"."users"("userId");

ALTER TABLE ONLY "public"."links"
    ADD CONSTRAINT "links_childReportId_fkey" FOREIGN KEY ("childReportId") REFERENCES "public"."reports"("reportId");

ALTER TABLE ONLY "public"."links"
    ADD CONSTRAINT "links_parentReportId_fkey" FOREIGN KEY ("parentReportId") REFERENCES "public"."reports"("reportId");

ALTER TABLE ONLY "public"."reportFolders"
    ADD CONSTRAINT "reportFolders_folderId_fkey" FOREIGN KEY ("folderId") REFERENCES "public"."folders"("folderId");

ALTER TABLE ONLY "public"."reportFolders"
    ADD CONSTRAINT "reportFolders_reportId_fkey" FOREIGN KEY ("reportId") REFERENCES "public"."reports"("reportId");

ALTER TABLE ONLY "public"."reports"
    ADD CONSTRAINT "reports_agentId_fkey" FOREIGN KEY ("agentId") REFERENCES "public"."agents"("agentId");

ALTER TABLE ONLY "public"."reports"
    ADD CONSTRAINT "reports_userId_fkey" FOREIGN KEY ("userId") REFERENCES "public"."users"("userId");

GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";

GRANT ALL ON FUNCTION "public"."get_parent_reports"("p_childreportid" integer) TO "anon";
GRANT ALL ON FUNCTION "public"."get_parent_reports"("p_childreportid" integer) TO "authenticated";
GRANT ALL ON FUNCTION "public"."get_parent_reports"("p_childreportid" integer) TO "service_role";

GRANT ALL ON FUNCTION "public"."get_parent_reports"("p_childreportid" bigint) TO "anon";
GRANT ALL ON FUNCTION "public"."get_parent_reports"("p_childreportid" bigint) TO "authenticated";
GRANT ALL ON FUNCTION "public"."get_parent_reports"("p_childreportid" bigint) TO "service_role";

GRANT ALL ON TABLE "public"."agents" TO "anon";
GRANT ALL ON TABLE "public"."agents" TO "authenticated";
GRANT ALL ON TABLE "public"."agents" TO "service_role";

GRANT ALL ON SEQUENCE "public"."agents_agentId_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."agents_agentId_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."agents_agentId_seq" TO "service_role";

GRANT ALL ON TABLE "public"."folderLikes" TO "anon";
GRANT ALL ON TABLE "public"."folderLikes" TO "authenticated";
GRANT ALL ON TABLE "public"."folderLikes" TO "service_role";

GRANT ALL ON SEQUENCE "public"."folderLikes_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."folderLikes_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."folderLikes_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."folders" TO "anon";
GRANT ALL ON TABLE "public"."folders" TO "authenticated";
GRANT ALL ON TABLE "public"."folders" TO "service_role";

GRANT ALL ON SEQUENCE "public"."folders_folderId_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."folders_folderId_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."folders_folderId_seq" TO "service_role";

GRANT ALL ON TABLE "public"."links" TO "anon";
GRANT ALL ON TABLE "public"."links" TO "authenticated";
GRANT ALL ON TABLE "public"."links" TO "service_role";

GRANT ALL ON SEQUENCE "public"."links_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."links_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."links_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."reportFolders" TO "anon";
GRANT ALL ON TABLE "public"."reportFolders" TO "authenticated";
GRANT ALL ON TABLE "public"."reportFolders" TO "service_role";

GRANT ALL ON SEQUENCE "public"."reportFolders_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."reportFolders_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."reportFolders_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."reports" TO "anon";
GRANT ALL ON TABLE "public"."reports" TO "authenticated";
GRANT ALL ON TABLE "public"."reports" TO "service_role";

GRANT ALL ON SEQUENCE "public"."reports_reportId_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."reports_reportId_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."reports_reportId_seq" TO "service_role";

GRANT ALL ON TABLE "public"."users" TO "anon";
GRANT ALL ON TABLE "public"."users" TO "authenticated";
GRANT ALL ON TABLE "public"."users" TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";

RESET ALL;
